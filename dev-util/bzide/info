B.Z.IDE - is the G(graphical) IDE that is a fucking cutting edge.
GUZZILLION times better than anything I used for 5 years of development. :)

B - Blender GUI usability and awesomeness.
Z - ZBrush GUI usability and awesomeness.

LINUX only, for now !!!

uses:
OpenGL
ZBrush|Blender like interface to make all stuff with code you want
XML configs, projects, workspaces


What I will inherit:
Codeblocks manners
ZBrush mixed with Blender awesomeness of GUI !!!


Will contain multiple new tools for editing mine projects.

Will be able to support MASSIVE projects like the one I am working on now.


#1
	I would like to work with projects in workspace and thei dependencies.
	I would like to see what will I build if I start to build any project.
	I would like to maintain easy to see and understand view of dependencies,
	with ability to easy abstract and detailize any part of build tree. (3D, pyramidal, tree)
	I would like to experience awesomeness while I do that. :)
	I would like that easely interact with "multiple core build" ability of ZIDE.

#2
	I would like to see when workspace is getting built, that every project is part of this
	process, not just a simple console output, I want to have the ability to see
	whole process from above or as deep and detailized as I want.
	I want it to be AWESOME, smooth, with color scheme that makes you relaxed and keep you in
	"development" state, with graphics, charts, bars.
	I want to have the ability to view complete process as a section of notebook, where 
	you able to see not one line of text, but piece of text (or the whole page if you want).
		Each project in workspace build process should look like a video clip in 
		non-linear vid-editor.
		And whole process would be like a track-list with video clips (pieces),
		when build is up, then it would be like an edited material being played, but 
		in another, more awesome way.
		I will be able to see what projects (if they use multiple threads for build)
		are being built now and able to view console output for each and every of them.
		I will be able to "concentrate" on current build output for a wile, list, view it.
		each project pictogramm will display progress and completion measurment for it.

<editing_conception #1>
		    Ok, let's imagine us editing sources for another awesome project.
		    Only this time we have SUPER IDE capability:
		    	 - complete source code is represented in "units" (i.e. .h or .hpp and .c or .cpp, etc)
			   Now what if we concentrate on that and approach development as development of those units.
			 - Each unit will be represented with child element (much like element used to represent
			   node in "(Blender's) node editing mode").
			 - There are some "attachment" points on each node (I don't know yet what could they represent in
			   UNIT BASED editing conception)
</editing_conception #1>